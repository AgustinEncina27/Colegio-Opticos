version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "80"
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./backend
    environment:
      CUOTA_MONTO_MENSUAL: ${CUOTA_MONTO_MENSUAL}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    ports:
      - "8080"
    depends_on:
      - db
    restart: always

  nginx-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/letsencrypt:ro
      - ./certs/www:/var/www/certbot:ro
      - ./frontend/dist/optica-app:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certs:/etc/letsencrypt
      - ./certs/www:/var/www/certbot
    entrypoint: /bin/sh -c
    command: >
      "trap exit TERM; while :; do
         certbot renew --webroot -w /var/www/certbot --quiet &&
         nginx -s reload;
         sleep 12h;
       done"
    restart: always

  db:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: optica_db
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
